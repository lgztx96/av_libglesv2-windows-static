name: Build ANGLE static library for Windows

on: [push]

jobs:
  build-angle-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - arch: x86
            compiler: msvc
            is_clang: false
          - arch: x64
            compiler: msvc
            is_clang: false
          - arch: x86
            compiler: clang
            is_clang: true
          - arch: x64
            compiler: clang
            is_clang: true
    steps:
    - uses: actions/checkout@v4

    - uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Set Environment Variable
      run: echo "DEPOT_TOOLS_WIN_TOOLCHAIN=0" >> $env:GITHUB_ENV

    - name: Install depot_tools
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo "$Env:GITHUB_WORKSPACE\depot_tools" >> $Env:GITHUB_PATH

    - name: Fetch ANGLE (Official External Flow)
      run: |
        mkdir angle
        cd angle
        fetch angle

    - name: Modify BUILD.gn to add complete_static_lib = true
      working-directory: ${{github.workspace}}
      shell: pwsh
      
      run: |
        cd angle;
        $path = "BUILD.gn"
        $lines = Get-Content $path
        $output = @()

        $inBlock = $false
        foreach ($line in $lines) {
            if ($line -match 'angle_static_library\("libGLESv2_static"\) {') {
                $inBlock = $true
                $output += $line
                continue
            }

            if ($inBlock -and $line -match '}') {
                $output += '  complete_static_lib = true'
                $inBlock = $false
            }

            $output += $line
        }

        $output | Set-Content $path -Encoding UTF8

    - name: Create Chrome folder and VERSION file
      run: |
        cd angle
        mkdir -p chrome
        echo "MAJOR=138" > chrome/VERSION
        echo "MINOR=0" >> chrome/VERSION
        echo "BUILD=7203" >> chrome/VERSION
        echo "PATCH=0" >> chrome/VERSION

    - name: Generate Build Files
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        cd angle
        $args = @(
        'target_os=\"win\"',
        'target_cpu=\"${{ matrix.arch }}\"',
        'is_debug=false',
        'angle_enable_vulkan=false',
        'angle_enable_d3d9=false',
        'use_custom_libcxx=false',
        'is_clang=${{ matrix.is_clang }}',
        'angle_build_tests=false',
        'use_cxx17=true',
        'is_component_build=false',
        'angle_assert_always_on=false',
        'angle_enable_null=false',
        'angle_enable_gl_null=false',
        'angle_enable_gl=false',
        'angle_enable_gl_desktop_backend=false',
         'angle_build_vulkan_system_info=false',
         'angle_enable_wgpu=false',
         'use_lld=false'
        ) -join ' '
        gn gen out/windows-${{ matrix.arch }}-static --args="$args"

    - name: Build ANGLE
      working-directory: ${{github.workspace}}
      shell: cmd
      run: |
        cd angle
        chcp 65001
        autoninja -C out/windows-${{ matrix.arch }}-static libGLESv2_static
        
    - name: Link ANGLE
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        cd angle/out/windows-${{ matrix.arch }}-static/obj
        if (${{ matrix.is_clang }}) {
          lib /out:av_libglesv2.lib libGLESv2_static.lib `
           $env:WindowsSdkDir\Lib\$env:WindowsSDKVersion\um\${{ matrix.arch }}\dxguid.lib
        } else {
            lib /out:av_libglesv2.lib libGLESv2_static.lib `
            $env:WindowsSdkDir\Lib\$env:WindowsSDKVersion\um\${{ matrix.arch }}\synchronization.lib `
            $env:WindowsSdkDir\Lib\$env:WindowsSDKVersion\um\${{ matrix.arch }}\Gdi32.lib `
            $env:WindowsSdkDir\Lib\$env:WindowsSDKVersion\um\${{ matrix.arch }}\d3d11.lib `
            $env:WindowsSdkDir\Lib\$env:WindowsSDKVersion\um\${{ matrix.arch }}\dxgi.lib `
            $env:WindowsSdkDir\Lib\$env:WindowsSDKVersion\um\${{ matrix.arch }}\dxguid.lib
         }

    - name: Package ANGLE
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: |
          cd angle/out/windows-${{ matrix.arch }}-static/obj
          7z a -y -mx9 av_libglesv2-windows-${{ matrix.arch }}-static-${{ matrix.compiler }}.7z av_libglesv2.lib

    - uses: actions/upload-artifact@v4
      with:
        name: av_libglesv2-windows-${{ matrix.arch }}-static-${{ matrix.compiler }}.7z
        path: angle/out/windows-${{ matrix.arch }}-static/obj/av_libglesv2-windows-${{ matrix.arch }}-static-${{ matrix.compiler }}.7z

    - name: Release artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: angle/out/windows-${{ matrix.arch }}-static/obj/av_libglesv2-windows-${{ matrix.arch }}-static-${{ matrix.compiler }}.7z